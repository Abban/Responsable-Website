/**
 * Grid
 *
 * Set up responsive grid system.
 * 
 * This is heavily infleuenced by the Semantic Grid http://semantic.gs
 *
 * @version 1.0
 */

/* Utility variable â€” you should never need to modify this */
@gridsystem_width: @columns * 1px;
//@correction: 0.5 / @max_width * 100 * 1%; // NOTE: CHeck this in IE

@min-width: 1048;
@correction: 0.5 / @min-width * 100 * 1%;

/* The micro clearfix http://nicolasgallagher.com/micro-clearfix-hack */
.grid-clearfix(){
	*zoom:1;
	
	&:before,
	&:after{
	    content:"";
	    display:table;
	}
	&:after{
	    clear:both;
	}
}

/* Ensure grid columns are set to border-boxes. This is essential */
.border-box(){
	-webkit-box-sizing: border-box; 
	-moz-box-sizing: border-box; 
	box-sizing: border-box;
	*behavior: url(/assets/js/libs/boxsizing.htc);
}

/* Our row container */
.row(@padding:0){
	.grid-clearfix();
	.border-box();

	display:block;
	max-width: @max_width;
	margin: 0 auto;
	padding:0 @padding;
}

/* Our column container */
.column(@x, @padding:(@gutter_width*0.5), @columns:@columns){
	.border-box();

	display: inline;
	float: left;
	width: 100%*(@x / @gridsystem_width);
	padding: 0 @padding;

	//IE 6 & 7 Fix
	*width: (100%*(@x / @gridsystem_width))-@correction;
}

/* Push adds left padding */
.push(@offset:1) {
	padding-left: 100%*(@offset / @gridsystem_width);
}

/* Pull adds right padding */
.pull(@offset:1) {
	padding-right: 100%*(@offset / @gridsystem_width);
}